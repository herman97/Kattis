import sys

class inter:
    def __init__(self, a, b):
        self.min = a
        self.max = b

    def __str__(self) -> str:
        return str(self.min) + " " + str(self.max) + " \n"
        
def solve(intervals, goal):
    intervals.sort(key = lambda x:x.max)

    if intervals[-1].max < goal.max:
        print("-1")
        return

    curr = []
    currel = None
    currmin = goal.min
    while(True):
        for elem in reversed(intervals):
            if elem.min <= currmin:
                currel = elem
                curr.append(currel)
                break
                
        if currel:
            intervals.remove(currel)
            currmin = currel.max
            if currmin >= goal.max:
                break
            currel = None
        else:
            break
    
    if not curr or curr[0].min > goal.min or curr[-1].max < goal.max:
        print("-1")
    else:
        print(len(curr))
        """ for e in curr:
            print(e, end="")
        print() """
        

def calc(r, w):
    return (r**2 - (w/2)**2)**0.5

def main():

    input = []
    if len(sys.argv) != 2:
        a = sys.stdin.readlines()
        for i in a:
            input.append(i[:-1])
    else:
        with open(sys.argv[1], 'r') as f:
            input = f.read().splitlines()

    lista = []

    while input:
        p = input.pop(0).split()

        n = int(p[0])
        l = int(p[1])
        w = int(p[2])
        
        goal = inter(0, l)

        for i in range(n):
            interval = input.pop(0).split()

            x = int(interval[0])
            r = int(interval[1])
            if r <= w/2:
                continue
            dx = calc(r, w)
            print (dx)
            ival = inter(x-dx, x+dx)
            lista.append(ival)
        
        solve(lista, goal)
        lista = []

if __name__ == "__main__":
    main()